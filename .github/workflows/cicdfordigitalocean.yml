name: CI/CD Pipeline for DigitalOcean

on:
  workflow_dispatch:  # Allow manual triggering

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}
  DIGITALOCEAN_IP: ${{ secrets.DIGITALOCEAN_IP }}
  SSH_USER: root
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ”‘ Connect to DigitalOcean and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_IP }}
          username: ${{ env.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            set -e  # Stop on first error

            echo "ðŸ“‚ Cloning latest code..."
            cd ~/ || exit
            if [ -d "FamilyPlanner" ]; then
              cd FamilyPlanner && git reset --hard && git pull
            else
              git clone https://github.com/OlgaTananova/FamilyPlanner.git
              cd FamilyPlanner
            fi

            echo "ðŸ“„ Creating .env file for Web App Build..."
            cat <<EOF > frontend/web-app/.env
            NEXT_PUBLIC_API_URL=https://api.familyplanner.online
            NEXT_PUBLIC_AZURE_AD_B2C_CLIENT_ID=ef8f5cf6-198a-4213-beb4-d2d08e00c07a
            NEXT_PUBLIC_AZURE_AD_B2C_TENANT_NAME=familyplanneronline
            NEXT_PUBLIC_AZURE_AD_B2C_USER_FLOW=B2C_1_susi
            NEXT_PUBLIC_AZURE_AD_B2C_PROFILE_EDIT_FLOW=B2C_1_edit_profile
            NEXT_PUBLIC_AZURE_AD_B2C_REDIRECT_URI=https://familyplanner.online
            NEXT_PUBLIC_AZURE_AD_B2C_EDIT_PROFILE_REDIRECT_URI=https://familyplanner.online/profile
            NEXT_PUBLIC_AZURE_AD_B2C_CATALOG_WRITE_SCOPE=https://familyplanneronline.onmicrosoft.com/api.familyplanneronline/catalog.write
            NEXT_PUBLIC_AZURE_AD_B2C_CATALOG_READ_SCOPE=https://familyplanneronline.onmicrosoft.com/api.familyplanneronline/catalog.read
            NEXT_PUBLIC_AZURE_AD_B2C_SHOPLIST_READ_SCOPE=https://familyplanneronline.onmicrosoft.com/api.familyplanneronline/shoppinglist.read
            NEXT_PUBLIC_AZURE_AD_B2C_SHOPLIST_WRITE_SCOPE=https://familyplanneronline.onmicrosoft.com/api.familyplanneronline/shoppinglist.write
            NEXT_PUBLIC_SIGNALR_HUB_URL=https://api.familyplanner.online/notifications
            NEXT_PUBLIC_GATEWAY_URL=https://api.familyplanner.online
            EOF

            echo "ðŸ“„ Creating .env file for the whole project..."
            cat <<EOF > .env
            POSTGRES_CATALOG_USER=${{ secrets.POSTGRES_CATALOG_USER }}
            POSTGRES_CATALOG_PASSWORD=${{ secrets.POSTGRES_CATALOG_PASSWORD }}
            POSTGRES_CATALOG_DATABASE=${{ secrets.POSTGRES_CATALOG_DATABASE }}
            POSTGRES_SHOPPING_USER=${{ secrets.POSTGRES_SHOPPING_USER }}
            POSTGRES_SHOPPING_PASSWORD=${{ secrets.POSTGRES_SHOPPING_PASSWORD }}
            POSTGRES_SHOPPING_DATABASE=${{ secrets.POSTGRES_SHOPPING_DATABASE }}
            RABBIT_MQ_USER=${{ secrets.RABBIT_MQ_USER }}
            RABBIT_MQ_PASSWORD=${{ secrets.RABBIT_MQ_PASSWORD }}
            RABBIT_MQ_HOST=${{ secrets.RABBIT_MQ_HOST }}
            CATALOG_POSTGRES_CONNECTION_STRING=${{ secrets.CATALOG_POSTGRES_CONNECTION_STRING }}
            SHOPPING_POSTGRES_CONNECTION_STRING=${{ secrets.SHOPPING_POSTGRES_CONNECTION_STRING }}
            APPLICATIONINSIGHTS_CONNECTION_STRING=${{ secrets.APPLICATIONINSIGHTS_CONNECTION_STRING }}
            CLIENT_APPS=${{ secrets.CLIENT_APPS }}
            AZURE_AD_B2C_INSTANCE=${{ secrets.AZURE_AD_B2C_INSTANCE }}
            AZURE_AD_B2C_CLIENT_ID=${{ secrets.AZURE_AD_B2C_CLIENT_ID }}
            AZURE_AD_B2C_DOMAIN=${{ secrets.AZURE_AD_B2C_DOMAIN }}
            AZURE_AD_B2C_SIGNUP_SIGNIN_POLICY=${{ secrets.AZURE_AD_B2C_SIGNUP_SIGNIN_POLICY }}
            AZURE_AD_B2C_TENANT_ID=${{ secrets.AZURE_AD_B2C_TENANT_ID }}
            AZURE_AD_B2C_CLIENT_SECRET=${{ secrets.AZURE_AD_B2C_CLIENT_SECRET }}
            AZURE_AD_B2C_CLIENT_EXTENSION_ID_WITHOUT_DASH=${{ secrets.AZURE_AD_B2C_CLIENT_EXTENSION_ID_WITHOUT_DASH }}
            EOF

            echo "ðŸ”§ Updating nginx.conf..."
            sed -i 's|server_name app.familyplan.com;|server_name familyplanner.online;|' nginx/nginx.conf
            sed -i 's|ssl_certificate /etc/nginx/certs/familyplan.com.certs;|ssl_certificate /etc/letsencrypt/live/familyplanner.online/fullchain.pem;|' nginx/nginx.conf
            sed -i 's|ssl_certificate_key /etc/nginx/certs/familyplan.com.key;|ssl_certificate_key /etc/letsencrypt/live/familyplanner.online/privkey.pem;|' nginx/nginx.conf
            sed -i 's|server_name api.familyplan.com;|server_name api.familyplanner.online;|' nginx/nginx.conf
            sed -i 's|ssl_certificate /etc/nginx/certs/api.familyplan.com.certs;|ssl_certificate /etc/letsencrypt/live/familyplanner.online/fullchain.pem;|' nginx/nginx.conf
            sed -i 's|ssl_certificate_key /etc/nginx/certs/api.familyplan.com.key;|ssl_certificate_key /etc/letsencrypt/live/familyplanner.online/privkey.pem;|' nginx/nginx.conf
          
            echo "ðŸ”§ Updating docker-compose.prod.yml..."
            sed -i '/nginx:/,/restart: unless-stopped/{
              s|.*- ./devcerts:/etc/nginx/certs:ro|    - /etc/letsencrypt/live:/etc/letsencrypt/live:ro|;
              s|.*- ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro|    - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro|;
              s|.*restart: unless-stopped|    - /etc/letsencrypt/archive:/etc/letsencrypt/archive:ro\n  restart: unless-stopped|;
            }' docker-compose.prod.yml
            
            echo "ðŸš€ Deploying Application..."
            docker compose --env-file .env -f docker-compose.prod.yml up -d --build

            echo "ðŸ”„ Restarting Nginx..."
            docker restart nginx    
