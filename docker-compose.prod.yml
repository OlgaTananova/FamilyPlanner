services:
  postgres-catalog:
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_CATALOG_USER}
      - POSTGRES_PASSWORD=${POSTGRES_CATALOG_PASSWORD}
      - POSTGRES_DB=${POSTGRES_CATALOG_DATABASE}
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - pgdata-catalog:/var/lib/postgresql/data
  postgres-shopping:
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_SHOPPING_USER}
      - POSTGRES_PASSWORD=${POSTGRES_SHOPPING_PASSWORD}
      - POSTGRES_DB=${POSTGRES_SHOPPING_DATABASE}
    env_file:
      - .env
    ports:
      - 5433:5432
    volumes:
      - pgdata-shopping:/var/lib/postgresql/data
  rabbitmq:
      image: rabbitmq:3-management-alpine
      ports: 
      - 5672:5672
      - 15672:15672
      environment:
        - RABBITMQ_DEFAULT_USER=${RABBIT_MQ_USER}
        - RABBITMQ_DEFAULT_PASS=${RABBIT_MQ_PASSWORD}
      env_file:
        - .env 
  catalog-svc:
      image: olgatan/catalog-svc:latest
      build: 
        context: .
        dockerfile: src/CatalogService/Dockerfile
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
        - ASPNETCORE_URLS=http://+:80
      env_file:
        - .env
      ports:
        - 7001:80  
      depends_on:
        - postgres-catalog
        - rabbitmq  
  shoppinglist-svc:
      image: olgatan/shoppinglist-svc:latest
      build: 
        context: .
        dockerfile: src/ShoppingListService/Dockerfile
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
        - ASPNETCORE_URLS=http://+:80
      env_file:
        - .env  
      ports:
        - 7002:80  
      depends_on:
        - postgres-shopping
        - rabbitmq
  notification-svc:
      image: olgatan/notification-svc:latest
      build: 
        context: .
        dockerfile: src/NotificationService/Dockerfile
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
        - ASPNETCORE_URLS=http://+:80
      env_file:
        - .env  
      ports:
        - 7003:80  
      depends_on:
        - rabbitmq
  gateway-svc:
      image: olgatan/gateway-svc:latest
      build: 
        context: .
        dockerfile: src/GatewayService/Dockerfile
      environment:
        - DOTNET_ENVIRONMENT=Production
        - ASPNETCORE_URLS=http://+:80
      env_file:
        - .env 
      ports:
        - 7004:80
  web-app:
    image: olgatan/web-app:latest
    build:
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - /var/lib/web/data
    ports:
      - 3000:3000
    env_file:
      - .env
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      #- ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      #- ./devcerts:/etc/nginx/certs:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt/live:/etc/letsencrypt/live:ro
      - /etc/letsencrypt/archive:/etc/letsencrypt/archive:ro
    depends_on:
      - web-app
      - gateway-svc 
    restart: unless-stopped                                            

volumes:
  pgdata-catalog:
  pgdata-shopping: