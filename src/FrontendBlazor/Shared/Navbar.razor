@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthenticationState>
    <nav class="bg-gradient-to-r from-purple-100 via-purple-50 to-fuchsia-100 
                shadow-md p-4 flex justify-between items-center 
                sticky top-0 z-50 w-full">

        <!-- Logo and Header -->
        <a href="/" class="flex items-center space-x-3">
            @* <svg xmlns="http://www.w3.org/2000/svg" class="h-9 w-9 text-purple-500" viewBox="0 0 24 24"
                fill="currentColor">
                <path
                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM12 20c-4.41 0-8-3.59-8-8 0-3.53 2.29-6.53 5.45-7.67L9 7h6l-.45-2.67C17.71 5.47 20 8.47 20 12c0 4.41-3.59 8-8 8z">
                </path>
            </svg> *@
            <h1 class="text-lg sm:text-sm font-semibold text-purple-600 md:text-xl lg:text-2xl">
                Family Planner
            </h1>
        </a>

        <!-- Right-side Actions -->
        <div class="flex items-center space-x-4">
            <AuthorizeView>
                <Authorized>
                    <a href="/profile" class="w-8 h-8 flex items-center justify-center rounded-full 
                               bg-purple-500 text-white text-sm md:w-10 md:h-10 md:text-base 
                               shadow-lg">
                        @userInitials
                    </a>
                    <button class="bg-red-500 text-white px-4 py-2 rounded" @onclick="SignOut">
                        Sign Out
                    </button>
                </Authorized>
                <NotAuthorized>
                    <button class="bg-blue-500 text-white px-4 py-2 rounded" @onclick="SignIn">
                        Sign In
                    </button>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </nav>
</AuthenticationState>

@code {
    private string userInitials = "NA";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            var givenName = user.FindFirst(c => c.Type == "given_name")?.Value;
            userInitials = !string.IsNullOrEmpty(givenName) ? givenName[0].ToString().ToUpper() : "NA";
        }
    }

    private void SignIn()
    {
        Navigation.NavigateTo("authentication/login");
    }

    private void SignOut()
    {
        Navigation.NavigateTo("authentication/logout");
    }
}
